package com.kakarote.module.entity.proto;// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FieldDataSnapshot.proto

public final class FieldDataSnapshotBuf {
  private FieldDataSnapshotBuf() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface FieldDataSnapshotOrBuilder extends
      // @@protoc_insertion_point(interface_extends:FieldDataSnapshot)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .FieldDataSnapshot.Data fieldDataList = 1;</code>
     */
    java.util.List<FieldDataSnapshot.Data>
        getFieldDataListList();
    /**
     * <code>repeated .FieldDataSnapshot.Data fieldDataList = 1;</code>
     */
    FieldDataSnapshot.Data getFieldDataList(int index);
    /**
     * <code>repeated .FieldDataSnapshot.Data fieldDataList = 1;</code>
     */
    int getFieldDataListCount();
    /**
     * <code>repeated .FieldDataSnapshot.Data fieldDataList = 1;</code>
     */
    java.util.List<? extends FieldDataSnapshot.DataOrBuilder>
        getFieldDataListOrBuilderList();
    /**
     * <code>repeated .FieldDataSnapshot.Data fieldDataList = 1;</code>
     */
    FieldDataSnapshot.DataOrBuilder getFieldDataListOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code FieldDataSnapshot}
   */
  public  static final class FieldDataSnapshot extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:FieldDataSnapshot)
      FieldDataSnapshotOrBuilder {
    // Use FieldDataSnapshot.newBuilder() to construct.
    private FieldDataSnapshot(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FieldDataSnapshot() {
      fieldDataList_ = java.util.Collections.emptyList();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private FieldDataSnapshot(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                fieldDataList_ = new java.util.ArrayList<Data>();
                mutable_bitField0_ |= 0x00000001;
              }
              fieldDataList_.add(
                  input.readMessage(Data.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          fieldDataList_ = java.util.Collections.unmodifiableList(fieldDataList_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return FieldDataSnapshotBuf.internal_static_FieldDataSnapshot_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return FieldDataSnapshotBuf.internal_static_FieldDataSnapshot_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              FieldDataSnapshot.class, Builder.class);
    }

    public interface DataOrBuilder extends
        // @@protoc_insertion_point(interface_extends:FieldDataSnapshot.Data)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>map&lt;string, string&gt; data = 1;</code>
       */
      int getDataCount();
      /**
       * <code>map&lt;string, string&gt; data = 1;</code>
       */
      boolean containsData(
          String key);
      /**
       * Use {@link #getDataMap()} instead.
       */
      @Deprecated
      java.util.Map<String, String>
      getData();
      /**
       * <code>map&lt;string, string&gt; data = 1;</code>
       */
      java.util.Map<String, String>
      getDataMap();
      /**
       * <code>map&lt;string, string&gt; data = 1;</code>
       */

      String getDataOrDefault(
          String key,
          String defaultValue);
      /**
       * <code>map&lt;string, string&gt; data = 1;</code>
       */

      String getDataOrThrow(
          String key);
    }
    /**
     * Protobuf type {@code FieldDataSnapshot.Data}
     */
    public  static final class Data extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:FieldDataSnapshot.Data)
        DataOrBuilder {
      // Use Data.newBuilder() to construct.
      private Data(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Data() {
      }

      @Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private Data(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                  data_ = com.google.protobuf.MapField.newMapField(
                      DataDefaultEntryHolder.defaultEntry);
                  mutable_bitField0_ |= 0x00000001;
                }
                com.google.protobuf.MapEntry<String, String>
                data__ = input.readMessage(
                    DataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                data_.getMutableMap().put(
                    data__.getKey(), data__.getValue());
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return FieldDataSnapshotBuf.internal_static_FieldDataSnapshot_Data_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetData();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return FieldDataSnapshotBuf.internal_static_FieldDataSnapshot_Data_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Data.class, Builder.class);
      }

      public static final int DATA_FIELD_NUMBER = 1;
      private static final class DataDefaultEntryHolder {
        static final com.google.protobuf.MapEntry<
            String, String> defaultEntry =
                com.google.protobuf.MapEntry
                .<String, String>newDefaultInstance(
                    FieldDataSnapshotBuf.internal_static_FieldDataSnapshot_Data_DataEntry_descriptor, 
                    com.google.protobuf.WireFormat.FieldType.STRING,
                    "",
                    com.google.protobuf.WireFormat.FieldType.STRING,
                    "");
      }
      private com.google.protobuf.MapField<
          String, String> data_;
      private com.google.protobuf.MapField<String, String>
      internalGetData() {
        if (data_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              DataDefaultEntryHolder.defaultEntry);
        }
        return data_;
      }

      public int getDataCount() {
        return internalGetData().getMap().size();
      }
      /**
       * <code>map&lt;string, string&gt; data = 1;</code>
       */

      public boolean containsData(
          String key) {
        if (key == null) { throw new NullPointerException(); }
        return internalGetData().getMap().containsKey(key);
      }
      /**
       * Use {@link #getDataMap()} instead.
       */
      @Deprecated
      public java.util.Map<String, String> getData() {
        return getDataMap();
      }
      /**
       * <code>map&lt;string, string&gt; data = 1;</code>
       */

      public java.util.Map<String, String> getDataMap() {
        return internalGetData().getMap();
      }
      /**
       * <code>map&lt;string, string&gt; data = 1;</code>
       */

      public String getDataOrDefault(
          String key,
          String defaultValue) {
        if (key == null) { throw new NullPointerException(); }
        java.util.Map<String, String> map =
            internalGetData().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, string&gt; data = 1;</code>
       */

      public String getDataOrThrow(
          String key) {
        if (key == null) { throw new NullPointerException(); }
        java.util.Map<String, String> map =
            internalGetData().getMap();
        if (!map.containsKey(key)) {
          throw new IllegalArgumentException();
        }
        return map.get(key);
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        com.google.protobuf.GeneratedMessageV3
          .serializeStringMapTo(
            output,
            internalGetData(),
            DataDefaultEntryHolder.defaultEntry,
            1);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        for (java.util.Map.Entry<String, String> entry
             : internalGetData().getMap().entrySet()) {
          com.google.protobuf.MapEntry<String, String>
          data__ = DataDefaultEntryHolder.defaultEntry.newBuilderForType()
              .setKey(entry.getKey())
              .setValue(entry.getValue())
              .build();
          size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(1, data__);
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @Override
      public boolean equals(final Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof Data)) {
          return super.equals(obj);
        }
        Data other = (Data) obj;

        boolean result = true;
        result = result && internalGetData().equals(
            other.internalGetData());
        return result;
      }

      @Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptorForType().hashCode();
        if (!internalGetData().getMap().isEmpty()) {
          hash = (37 * hash) + DATA_FIELD_NUMBER;
          hash = (53 * hash) + internalGetData().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static Data parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static Data parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static Data parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static Data parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static Data parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static Data parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static Data parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static Data parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static Data parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static Data parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(Data prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @Override
      protected Builder newBuilderForType(
          BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code FieldDataSnapshot.Data}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:FieldDataSnapshot.Data)
          DataOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return FieldDataSnapshotBuf.internal_static_FieldDataSnapshot_Data_descriptor;
        }

        @SuppressWarnings({"rawtypes"})
        protected com.google.protobuf.MapField internalGetMapField(
            int number) {
          switch (number) {
            case 1:
              return internalGetData();
            default:
              throw new RuntimeException(
                  "Invalid map field number: " + number);
          }
        }
        @SuppressWarnings({"rawtypes"})
        protected com.google.protobuf.MapField internalGetMutableMapField(
            int number) {
          switch (number) {
            case 1:
              return internalGetMutableData();
            default:
              throw new RuntimeException(
                  "Invalid map field number: " + number);
          }
        }
        protected FieldAccessorTable
            internalGetFieldAccessorTable() {
          return FieldDataSnapshotBuf.internal_static_FieldDataSnapshot_Data_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  Data.class, Builder.class);
        }

        // Construct using FieldDataSnapshotBuf.FieldDataSnapshot.Data.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          internalGetMutableData().clear();
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return FieldDataSnapshotBuf.internal_static_FieldDataSnapshot_Data_descriptor;
        }

        public Data getDefaultInstanceForType() {
          return Data.getDefaultInstance();
        }

        public Data build() {
          Data result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public Data buildPartial() {
          Data result = new Data(this);
          int from_bitField0_ = bitField0_;
          result.data_ = internalGetData();
          result.data_.makeImmutable();
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof Data) {
            return mergeFrom((Data)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(Data other) {
          if (other == Data.getDefaultInstance()) return this;
          internalGetMutableData().mergeFrom(
              other.internalGetData());
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          Data parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (Data) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private com.google.protobuf.MapField<
            String, String> data_;
        private com.google.protobuf.MapField<String, String>
        internalGetData() {
          if (data_ == null) {
            return com.google.protobuf.MapField.emptyMapField(
                DataDefaultEntryHolder.defaultEntry);
          }
          return data_;
        }
        private com.google.protobuf.MapField<String, String>
        internalGetMutableData() {
          onChanged();;
          if (data_ == null) {
            data_ = com.google.protobuf.MapField.newMapField(
                DataDefaultEntryHolder.defaultEntry);
          }
          if (!data_.isMutable()) {
            data_ = data_.copy();
          }
          return data_;
        }

        public int getDataCount() {
          return internalGetData().getMap().size();
        }
        /**
         * <code>map&lt;string, string&gt; data = 1;</code>
         */

        public boolean containsData(
            String key) {
          if (key == null) { throw new NullPointerException(); }
          return internalGetData().getMap().containsKey(key);
        }
        /**
         * Use {@link #getDataMap()} instead.
         */
        @Deprecated
        public java.util.Map<String, String> getData() {
          return getDataMap();
        }
        /**
         * <code>map&lt;string, string&gt; data = 1;</code>
         */

        public java.util.Map<String, String> getDataMap() {
          return internalGetData().getMap();
        }
        /**
         * <code>map&lt;string, string&gt; data = 1;</code>
         */

        public String getDataOrDefault(
            String key,
            String defaultValue) {
          if (key == null) { throw new NullPointerException(); }
          java.util.Map<String, String> map =
              internalGetData().getMap();
          return map.containsKey(key) ? map.get(key) : defaultValue;
        }
        /**
         * <code>map&lt;string, string&gt; data = 1;</code>
         */

        public String getDataOrThrow(
            String key) {
          if (key == null) { throw new NullPointerException(); }
          java.util.Map<String, String> map =
              internalGetData().getMap();
          if (!map.containsKey(key)) {
            throw new IllegalArgumentException();
          }
          return map.get(key);
        }

        public Builder clearData() {
          getMutableData().clear();
          return this;
        }
        /**
         * <code>map&lt;string, string&gt; data = 1;</code>
         */

        public Builder removeData(
            String key) {
          if (key == null) { throw new NullPointerException(); }
          getMutableData().remove(key);
          return this;
        }
        /**
         * Use alternate mutation accessors instead.
         */
        @Deprecated
        public java.util.Map<String, String>
        getMutableData() {
          return internalGetMutableData().getMutableMap();
        }
        /**
         * <code>map&lt;string, string&gt; data = 1;</code>
         */
        public Builder putData(
            String key,
            String value) {
          if (key == null) { throw new NullPointerException(); }
          if (value == null) { throw new NullPointerException(); }
          getMutableData().put(key, value);
          return this;
        }
        /**
         * <code>map&lt;string, string&gt; data = 1;</code>
         */

        public Builder putAllData(
            java.util.Map<String, String> values) {
          getMutableData().putAll(values);
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:FieldDataSnapshot.Data)
      }

      // @@protoc_insertion_point(class_scope:FieldDataSnapshot.Data)
      private static final Data DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new Data();
      }

      public static Data getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Data>
          PARSER = new com.google.protobuf.AbstractParser<Data>() {
        public Data parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new Data(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Data> parser() {
        return PARSER;
      }

      @Override
      public com.google.protobuf.Parser<Data> getParserForType() {
        return PARSER;
      }

      public Data getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int FIELDDATALIST_FIELD_NUMBER = 1;
    private java.util.List<Data> fieldDataList_;
    /**
     * <code>repeated .FieldDataSnapshot.Data fieldDataList = 1;</code>
     */
    public java.util.List<Data> getFieldDataListList() {
      return fieldDataList_;
    }
    /**
     * <code>repeated .FieldDataSnapshot.Data fieldDataList = 1;</code>
     */
    public java.util.List<? extends DataOrBuilder>
        getFieldDataListOrBuilderList() {
      return fieldDataList_;
    }
    /**
     * <code>repeated .FieldDataSnapshot.Data fieldDataList = 1;</code>
     */
    public int getFieldDataListCount() {
      return fieldDataList_.size();
    }
    /**
     * <code>repeated .FieldDataSnapshot.Data fieldDataList = 1;</code>
     */
    public Data getFieldDataList(int index) {
      return fieldDataList_.get(index);
    }
    /**
     * <code>repeated .FieldDataSnapshot.Data fieldDataList = 1;</code>
     */
    public DataOrBuilder getFieldDataListOrBuilder(
        int index) {
      return fieldDataList_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < fieldDataList_.size(); i++) {
        output.writeMessage(1, fieldDataList_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < fieldDataList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, fieldDataList_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof FieldDataSnapshot)) {
        return super.equals(obj);
      }
      FieldDataSnapshot other = (FieldDataSnapshot) obj;

      boolean result = true;
      result = result && getFieldDataListList()
          .equals(other.getFieldDataListList());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (getFieldDataListCount() > 0) {
        hash = (37 * hash) + FIELDDATALIST_FIELD_NUMBER;
        hash = (53 * hash) + getFieldDataListList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static FieldDataSnapshot parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FieldDataSnapshot parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FieldDataSnapshot parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FieldDataSnapshot parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FieldDataSnapshot parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static FieldDataSnapshot parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static FieldDataSnapshot parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static FieldDataSnapshot parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static FieldDataSnapshot parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static FieldDataSnapshot parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(FieldDataSnapshot prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code FieldDataSnapshot}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:FieldDataSnapshot)
        FieldDataSnapshotOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return FieldDataSnapshotBuf.internal_static_FieldDataSnapshot_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return FieldDataSnapshotBuf.internal_static_FieldDataSnapshot_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                FieldDataSnapshot.class, Builder.class);
      }

      // Construct using FieldDataSnapshotBuf.FieldDataSnapshot.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getFieldDataListFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (fieldDataListBuilder_ == null) {
          fieldDataList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          fieldDataListBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return FieldDataSnapshotBuf.internal_static_FieldDataSnapshot_descriptor;
      }

      public FieldDataSnapshot getDefaultInstanceForType() {
        return FieldDataSnapshot.getDefaultInstance();
      }

      public FieldDataSnapshot build() {
        FieldDataSnapshot result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public FieldDataSnapshot buildPartial() {
        FieldDataSnapshot result = new FieldDataSnapshot(this);
        int from_bitField0_ = bitField0_;
        if (fieldDataListBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            fieldDataList_ = java.util.Collections.unmodifiableList(fieldDataList_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.fieldDataList_ = fieldDataList_;
        } else {
          result.fieldDataList_ = fieldDataListBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof FieldDataSnapshot) {
          return mergeFrom((FieldDataSnapshot)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(FieldDataSnapshot other) {
        if (other == FieldDataSnapshot.getDefaultInstance()) return this;
        if (fieldDataListBuilder_ == null) {
          if (!other.fieldDataList_.isEmpty()) {
            if (fieldDataList_.isEmpty()) {
              fieldDataList_ = other.fieldDataList_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureFieldDataListIsMutable();
              fieldDataList_.addAll(other.fieldDataList_);
            }
            onChanged();
          }
        } else {
          if (!other.fieldDataList_.isEmpty()) {
            if (fieldDataListBuilder_.isEmpty()) {
              fieldDataListBuilder_.dispose();
              fieldDataListBuilder_ = null;
              fieldDataList_ = other.fieldDataList_;
              bitField0_ = (bitField0_ & ~0x00000001);
              fieldDataListBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getFieldDataListFieldBuilder() : null;
            } else {
              fieldDataListBuilder_.addAllMessages(other.fieldDataList_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        FieldDataSnapshot parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (FieldDataSnapshot) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<Data> fieldDataList_ =
        java.util.Collections.emptyList();
      private void ensureFieldDataListIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          fieldDataList_ = new java.util.ArrayList<Data>(fieldDataList_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          Data, Data.Builder, DataOrBuilder> fieldDataListBuilder_;

      /**
       * <code>repeated .FieldDataSnapshot.Data fieldDataList = 1;</code>
       */
      public java.util.List<Data> getFieldDataListList() {
        if (fieldDataListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fieldDataList_);
        } else {
          return fieldDataListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .FieldDataSnapshot.Data fieldDataList = 1;</code>
       */
      public int getFieldDataListCount() {
        if (fieldDataListBuilder_ == null) {
          return fieldDataList_.size();
        } else {
          return fieldDataListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .FieldDataSnapshot.Data fieldDataList = 1;</code>
       */
      public Data getFieldDataList(int index) {
        if (fieldDataListBuilder_ == null) {
          return fieldDataList_.get(index);
        } else {
          return fieldDataListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .FieldDataSnapshot.Data fieldDataList = 1;</code>
       */
      public Builder setFieldDataList(
          int index, Data value) {
        if (fieldDataListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldDataListIsMutable();
          fieldDataList_.set(index, value);
          onChanged();
        } else {
          fieldDataListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .FieldDataSnapshot.Data fieldDataList = 1;</code>
       */
      public Builder setFieldDataList(
          int index, Data.Builder builderForValue) {
        if (fieldDataListBuilder_ == null) {
          ensureFieldDataListIsMutable();
          fieldDataList_.set(index, builderForValue.build());
          onChanged();
        } else {
          fieldDataListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .FieldDataSnapshot.Data fieldDataList = 1;</code>
       */
      public Builder addFieldDataList(Data value) {
        if (fieldDataListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldDataListIsMutable();
          fieldDataList_.add(value);
          onChanged();
        } else {
          fieldDataListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .FieldDataSnapshot.Data fieldDataList = 1;</code>
       */
      public Builder addFieldDataList(
          int index, Data value) {
        if (fieldDataListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldDataListIsMutable();
          fieldDataList_.add(index, value);
          onChanged();
        } else {
          fieldDataListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .FieldDataSnapshot.Data fieldDataList = 1;</code>
       */
      public Builder addFieldDataList(
          Data.Builder builderForValue) {
        if (fieldDataListBuilder_ == null) {
          ensureFieldDataListIsMutable();
          fieldDataList_.add(builderForValue.build());
          onChanged();
        } else {
          fieldDataListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .FieldDataSnapshot.Data fieldDataList = 1;</code>
       */
      public Builder addFieldDataList(
          int index, Data.Builder builderForValue) {
        if (fieldDataListBuilder_ == null) {
          ensureFieldDataListIsMutable();
          fieldDataList_.add(index, builderForValue.build());
          onChanged();
        } else {
          fieldDataListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .FieldDataSnapshot.Data fieldDataList = 1;</code>
       */
      public Builder addAllFieldDataList(
          Iterable<? extends Data> values) {
        if (fieldDataListBuilder_ == null) {
          ensureFieldDataListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, fieldDataList_);
          onChanged();
        } else {
          fieldDataListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .FieldDataSnapshot.Data fieldDataList = 1;</code>
       */
      public Builder clearFieldDataList() {
        if (fieldDataListBuilder_ == null) {
          fieldDataList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          fieldDataListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .FieldDataSnapshot.Data fieldDataList = 1;</code>
       */
      public Builder removeFieldDataList(int index) {
        if (fieldDataListBuilder_ == null) {
          ensureFieldDataListIsMutable();
          fieldDataList_.remove(index);
          onChanged();
        } else {
          fieldDataListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .FieldDataSnapshot.Data fieldDataList = 1;</code>
       */
      public Data.Builder getFieldDataListBuilder(
          int index) {
        return getFieldDataListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .FieldDataSnapshot.Data fieldDataList = 1;</code>
       */
      public DataOrBuilder getFieldDataListOrBuilder(
          int index) {
        if (fieldDataListBuilder_ == null) {
          return fieldDataList_.get(index);  } else {
          return fieldDataListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .FieldDataSnapshot.Data fieldDataList = 1;</code>
       */
      public java.util.List<? extends DataOrBuilder>
           getFieldDataListOrBuilderList() {
        if (fieldDataListBuilder_ != null) {
          return fieldDataListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fieldDataList_);
        }
      }
      /**
       * <code>repeated .FieldDataSnapshot.Data fieldDataList = 1;</code>
       */
      public Data.Builder addFieldDataListBuilder() {
        return getFieldDataListFieldBuilder().addBuilder(
            Data.getDefaultInstance());
      }
      /**
       * <code>repeated .FieldDataSnapshot.Data fieldDataList = 1;</code>
       */
      public Data.Builder addFieldDataListBuilder(
          int index) {
        return getFieldDataListFieldBuilder().addBuilder(
            index, Data.getDefaultInstance());
      }
      /**
       * <code>repeated .FieldDataSnapshot.Data fieldDataList = 1;</code>
       */
      public java.util.List<Data.Builder>
           getFieldDataListBuilderList() {
        return getFieldDataListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          Data, Data.Builder, DataOrBuilder>
          getFieldDataListFieldBuilder() {
        if (fieldDataListBuilder_ == null) {
          fieldDataListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              Data, Data.Builder, DataOrBuilder>(
                  fieldDataList_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          fieldDataList_ = null;
        }
        return fieldDataListBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:FieldDataSnapshot)
    }

    // @@protoc_insertion_point(class_scope:FieldDataSnapshot)
    private static final FieldDataSnapshot DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new FieldDataSnapshot();
    }

    public static FieldDataSnapshot getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FieldDataSnapshot>
        PARSER = new com.google.protobuf.AbstractParser<FieldDataSnapshot>() {
      public FieldDataSnapshot parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new FieldDataSnapshot(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FieldDataSnapshot> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<FieldDataSnapshot> getParserForType() {
      return PARSER;
    }

    public FieldDataSnapshot getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_FieldDataSnapshot_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_FieldDataSnapshot_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_FieldDataSnapshot_Data_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_FieldDataSnapshot_Data_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_FieldDataSnapshot_Data_DataEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_FieldDataSnapshot_Data_DataEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\027FieldDataSnapshot.proto\"\251\001\n\021FieldDataS" +
      "napshot\022.\n\rfieldDataList\030\001 \003(\0132\027.FieldDa" +
      "taSnapshot.Data\032d\n\004Data\022/\n\004data\030\001 \003(\0132!." +
      "FieldDataSnapshot.Data.DataEntry\032+\n\tData" +
      "Entry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001B\026B" +
      "\024FieldDataSnapshotBufb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_FieldDataSnapshot_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_FieldDataSnapshot_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_FieldDataSnapshot_descriptor,
        new String[] { "FieldDataList", });
    internal_static_FieldDataSnapshot_Data_descriptor =
      internal_static_FieldDataSnapshot_descriptor.getNestedTypes().get(0);
    internal_static_FieldDataSnapshot_Data_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_FieldDataSnapshot_Data_descriptor,
        new String[] { "Data", });
    internal_static_FieldDataSnapshot_Data_DataEntry_descriptor =
      internal_static_FieldDataSnapshot_Data_descriptor.getNestedTypes().get(0);
    internal_static_FieldDataSnapshot_Data_DataEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_FieldDataSnapshot_Data_DataEntry_descriptor,
        new String[] { "Key", "Value", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
